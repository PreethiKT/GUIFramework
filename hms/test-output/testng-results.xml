<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-04T08:51:14Z" name="Default suite" finished-at="2024-06-04T08:52:01Z" duration-ms="46772">
    <groups>
    </groups>
    <test started-at="2024-06-04T08:51:14Z" name="Default test" finished-at="2024-06-04T08:52:01Z" duration-ms="46772">
      <class name="endToEnd_Scripts.AddDoctorAndVerifyDoctorLogin">
        <test-method is-config="true" signature="configBS()[pri:0, instance:endToEnd_Scripts.AddDoctorAndVerifyDoctorLogin@130e116b]" started-at="2024-06-04T08:51:14Z" name="configBS" finished-at="2024-06-04T08:51:14Z" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBS -->
        <test-method is-config="true" signature="configBC()[pri:0, instance:endToEnd_Scripts.AddDoctorAndVerifyDoctorLogin@130e116b]" started-at="2024-06-04T08:51:14Z" name="configBC" finished-at="2024-06-04T08:51:18Z" duration-ms="3899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method signature="verifyDoctorLogin()[pri:0, instance:endToEnd_Scripts.AddDoctorAndVerifyDoctorLogin@130e116b]" started-at="2024-06-04T08:51:18Z" name="verifyDoctorLogin" finished-at="2024-06-04T08:52:00Z" duration-ms="42584" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: net::ERR_CONNECTION_TIMED_OUT
  (Session info: chrome=125.0.6422.114)
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8d59aeece53655ddd60f356cd51085bf, get {url=http://49.249.28.218:8081/AppServer/Hospital_Management_System/}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.114, chrome: {chromedriverVersion: 125.0.6422.141 (4b1e8393712..., userDataDir: C:\Users\gulsh\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56673}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56673/devtoo..., se:cdpVersion: 125.0.6422.114, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8d59aeece53655ddd60f356cd51085bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: net::ERR_CONNECTION_TIMED_OUT
  (Session info: chrome=125.0.6422.114)
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8d59aeece53655ddd60f356cd51085bf, get {url=http://49.249.28.218:8081/AppServer/Hospital_Management_System/}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.114, chrome: {chromedriverVersion: 125.0.6422.141 (4b1e8393712..., userDataDir: C:\Users\gulsh\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56673}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56673/devtoo..., se:cdpVersion: 125.0.6422.114, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8d59aeece53655ddd60f356cd51085bf
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:607)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:309)
at objectRepositoryUtility.AdminLoginPage.loginToapp(AdminLoginPage.java:62)
at endToEnd_Scripts.AddDoctorAndVerifyDoctorLogin.verifyDoctorLogin(AddDoctorAndVerifyDoctorLogin.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDoctorLogin -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:endToEnd_Scripts.AddDoctorAndVerifyDoctorLogin@130e116b]" started-at="2024-06-04T08:52:00Z" name="configAM" finished-at="2024-06-04T08:52:00Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:endToEnd_Scripts.AddDoctorAndVerifyDoctorLogin@130e116b]" started-at="2024-06-04T08:52:00Z" name="configAC" finished-at="2024-06-04T08:52:01Z" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
        <test-method is-config="true" signature="configAS()[pri:0, instance:endToEnd_Scripts.AddDoctorAndVerifyDoctorLogin@130e116b]" started-at="2024-06-04T08:52:01Z" name="configAS" finished-at="2024-06-04T08:52:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAS -->
      </class> <!-- endToEnd_Scripts.AddDoctorAndVerifyDoctorLogin -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
